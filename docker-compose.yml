version: '3'
services:
  wemo-controller:
    build:
        context: ./wemo-controller
    image: ml-catfeeder/wemo-controller
    network_mode: "host"
    env_file: .env
    ports:
    - "8000:8000"
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 100
        window: 10s
  darknet-decoder-controller:
    build:
        context: ./darknet-decoder
    image: ml-catfeeder/darknet-decoder
    network_mode: "host"
    env_file: .env
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    privileged: true
  darknet-decoder:
    build:
        context: ./darknet-decoder
    image: ml-catfeeder/darknet-decoder
    command: "echo 'Waiting for darknet-decoder-controller to start'"
  video-stream-reverse-proxy:
    build:
      context: ./video-stream-reverse-proxy
    image: ml-catfeeder/video-stream-reverse-proxy
    network_mode: "host"
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 100
        window: 10s
  web-interface:
    build:
      context: ./web-interface
    image: ml-catfeeder/web-interface
    network_mode: "host"
    env_file: .env
    ports:
    - "10080:10080"
    privileged: true
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 100
        window: 10s
  web-http-redirector:
    build:
      context: ./web-http-redirector
    image: ml-catfeeder/web-http-redirector
    network_mode: "host"
    env_file: .env
    ports:
    - "8100:8100"
    privileged: true
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 100
        window: 10s
  logic-controller:
    build:
      context: ./logic-controller
    image: ml-catfeeder/logic-controller
    network_mode: "host"
    env_file: .env
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 100
        window: 10s
  data-collector:
    build:
      context: ./data-collector
    image: ml-catfeeder/data-collector
    volumes:
      - "/home/matt/Desktop/incoming-cat-photos:/data"
    network_mode: "host"
    env_file: .env
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 100
        window: 10s
